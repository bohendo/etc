#!/usr/bin/env bash
########################################
# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files for examples

########################################
# Export Environment Variables

mkdir -p "$HOME/.npm-packages"

export SHELL="bash"
export BASH_SILENCE_DEPRECATION_WARNING=1
export EDITOR="nvim"
export ETC_DIR="$HOME/code/bohendo/etc"
export TERMINFO="/usr/share/terminfo"
unset  MANPATH  # I'd rather inherit defaults from /etc/manpage.conf

# System PATH overrides
brew="/opt/homebrew/bin:/opt/homebrew/sbin"
local_bin="$HOME/bin"
export PATH="$local_bin:$PATH:$brew"

# User PATH overrides
# golang="/usr/local/go/bin"
# pyenv="$HOME/.pyenv"
# coreutils="$(brew --prefix coreutils)/libexec/gnubin"
# node14="$HOME/.nvm/versions/node/v14.19.1/bin"
# foundry="$HOME/.foundry/bin"
# local_bin="$HOME/.local/bin"
# home_bin="$HOME/bin"
# npm_packages="$HOME/.npm-packages/bin"
# nix="$HOME/.nix-profile/bin:/nix/var/nix/profiles/default/bin"
# export PATH="$home_bin:$nix:$pyenv:$golang:$foundry:$npm_packages:$node14:$local_bin:$coreutils:$PATH"

########################################
# If not running interactively, don't do anything else

case $- in
  *i*) ;;
    *) return;;
esac

########################################
# Set Shell Variables

# don't put duplicate lines or lines starting with space in the history.
export HISTCONTROL=ignoreboth
export HISTSIZE=10000
export HISTFILESIZE=20000
export HISTTIMEFORMAT="%y%m%d-%H%M%S - "

# shellcheck disable=SC2154
PS1='\n${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\n\$ '

########################################
# Man

# this will give my man pages some color. Courtesy of:
# https://gist.github.com/cocoalabs/2fb7dc2199b0d4bf160364b8e557eb66
man() {
	env \
		"LESS_TERMCAP_mb=$(printf "\e[1;31m")" \
		"LESS_TERMCAP_md=$(printf "\e[1;31m")" \
		"LESS_TERMCAP_me=$(printf "\e[0m")" \
		"LESS_TERMCAP_se=$(printf "\e[0m")" \
		"LESS_TERMCAP_so=$(printf "\e[1;44;33m")" \
		"LESS_TERMCAP_ue=$(printf "\e[0m")" \
		"LESS_TERMCAP_us=$(printf "\e[1;32m")" \
			man "$@"
}

########################################
# set shell options

# this will protect me from overwritting stuff
set -o noclobber

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
# check the window size after each command and, if necessary, update
# the values of LINES and COLUMNS.
shopt -s checkwinsize

########################################
# less

# make less more friendly for non-text input files, see lesspipe(1)
if [ -x /usr/bin/lesspipe ]
then eval "$(SHELL=/bin/sh lesspipe)"
fi

########################################
# Configure autocompletions

git_autocomplete="$HOME/.git-completion.bash"
if [[ -s "$git_autocomplete" ]]; then source "$git_autocomplete"; fi

function _makefile_targets {
    local curr_arg;
    local targets;
    # Find makefile targets available in the current directory
    targets=''
    if [[ -e "$(pwd)/Makefile" ]]; then
        targets=$( \
            grep -oE '^[a-zA-Z0-9_-]+:' Makefile \
            | sed 's/://' \
            | tr '\n' ' ' \
        )
    fi
    # Filter targets based on user input to the bash completion
    curr_arg=${COMP_WORDS[COMP_CWORD]}
    # shellcheck disable=SC2207
    COMPREPLY=( $(compgen -W "${targets[@]}" -- "$curr_arg" ) );
}
complete -F _makefile_targets make

if [[ -n "$(which npm)" ]]
then
  npm_completion="/tmp/npm.completion"
  rm -f "$npm_completion"
  npm completion > "$npm_completion"
  # shellcheck disable=SC1091
  source /tmp/npm.completion
  rm -f "$npm_completion"
fi

