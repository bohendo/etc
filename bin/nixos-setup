#! /usr/bin/env bash
set -e

########################################
# Check/fix environment

export NIXPKGS_ALLOW_UNFREE=1

# Get path to this etc project dir
etc="$(realpath "${ETC_DIR:-$HOME/etc}")"
nixos="$etc/nixos"

cd "$etc" || exit 1

if [[ -n "$(git status -s)" ]]
then echo "Git repo is dirty" && exit
else echo "Rebuilding system from $nixos"
fi

echo
echo "Checking that nixos dir is a valid flake.."
if ! nix flake check "$nixos"
then
  echo "Enabling experimental nix features.."
  mkdir -p ~/.config/nix
  echo 'experimental-features = nix-command flakes' > ~/.config/nix/nix.conf
  if ! nix flake check "$nixos"
  then echo "Failure, the flake.nix might have a syntax error" && exit 1
  else echo "Success"
  fi
fi
echo "Done"

########################################
# Pure build & installation

echo "not really"
exit

echo
echo "Rebuilding & switching to new nixos config.."
sudo nixos-rebuild switch --flake "$nixos" -L # what does -L do?
echo "Done"

echo
echo "Rebuilding & switching to new home config.."
nix run --impure github:nix-community/home-manager -- switch --flake "$nixos"
home-manager switch --flake "$nixos"
echo "Done"

########################################
# Impure post install steps

if [[ "$(gsettings get org.gnome.desktop.input-sources xkb-options)" == "@as []" ]]
then
  echo "Capslock remap not registerd, refreshing gnome desktop input setting.."
  # Impure: need to run this once on the fresh OS to get xkbOptions to load
  gsettings reset org.gnome.desktop.input-sources xkb-options
  gsettings reset org.gnome.desktop.input-sources sources
  echo "gsettings reset, you might need to log out and back in for them to be properly applied"
else
  echo "keyboard remappings looks good"
fi

docker swarm init 2> /dev/null # idc about "alreaded initalized" errors on subsequent inits
