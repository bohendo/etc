#!/bin/bash

set -e

me="$(who | awk '{print $1}')"

# Install essentials
apt-get install -y compizconfig-settings-manager vim curl git

# Still need:
# solc
# npm install -g surya
# sudo apt install net-tools
# sudo apt-get install android-tools-adb android-tools-fastboot # maybe not..
# vim-gnome
# Zoom
# pdftk
# pip
# exfat-fuse exfat-utils
# gnome-tweak-tool unity-tweak-tool dconf-editor
# snap install discord
# build-essential libssl-dev nvm
# whois

# sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
# sudo apt-add-repository https://cli.github.com/packages
# sudo apt update
# sudo apt install gh

# apt-get install shellcheck

# Install Urbit
# curl -O https://bootstrap.urbit.org/urbit-linux64-v0.10.3.tgz
# tar xzf urbit-linux64-v0.10.3.tgz
# mv urbit-linux64-v0.10.3/urbit ~/bin/urbit

# setup touchpad drivers & cmd line config
# sudo apt-get remove xserver-xorg-input-libinput libinput-tools
# sudo apt-get install xserver-xorg-input-all xserver-xorg-input-evdev xserver-xorg-input-synaptics

# Install Rust + wasm-pack
# curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
# curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

# Whiteblock
# curl -sSf https://assets.whiteblock.io/cli/install.sh | sh

# Install neovim
# sudo add-apt-repository ppa:neovim-ppa/stable
# sudo apt-get update
# sudo apt-get install neovim

# Android dev stuff
# sudo apt-get install openjdk-8-jre

# sudo apt install openvpn
# sudo apt-get install network-manager-openvpn-gnome
# below command came from: https://askubuntu.com/a/1071042
# sudo nmcli connection import type openvpn file /path/to/foo.ovpn

########################################
# Add repositories to apt sources & update

# Dropbox
if [[ -z "`grep Dropbox /etc/apt/sources.list`" ]]
then
  echo '' >> /etc/apt/sources.list
  echo '# Dropbox' >> /etc/apt/sources.list
  echo "deb [arch=i386,amd64] http://linux.dropbox.com/ubuntu `lsb_release -cs` main" >> /etc/apt/sources.list
  apt-key adv --keyserver pgp.mit.edu --recv-keys 1C61A2656FB57B7E4DE0F4C1FC918B335044912E
fi

# Docker
if [[ -z "`grep Docker /etc/apt/sources.list`" ]]
then
  echo '' >> /etc/apt/sources.list
  echo '# Docker' >> /etc/apt/sources.list
  echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu `lsb_release -cs` stable" >> /etc/apt/sources.list
  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
fi

# Brave Browser
if [[ -z "`grep Brave /etc/apt/sources.list`" ]]
then
  echo '' >> /etc/apt/sources.list
  echo '# Brave' >> /etc/apt/sources.list
  echo "deb [arch=amd64] https://s3-us-west-2.amazonaws.com/brave-apt `lsb_release -sc` main" >> /etc/apt/sources.list
  curl https://s3-us-west-2.amazonaws.com/brave-apt/keys.asc | sudo apt-key add -
fi

# NodeJS
if [[ -z "`find /etc/apt/sources.list.d/ | grep nodesource`" ]]
then
  curl -sL https://deb.nodesource.com/setup_9.x | sudo -E bash -
fi

# KeePassX
if [[ -z "`find /etc/apt/sources.list.d/ | grep eugenesan`" ]]
then
  sudo add-apt-repository -y ppa:eugenesan/ppa
fi

# PHP
if [[ -z "`find /etc/apt/sources.list.d/ | grep php`" ]]
then
  sudo add-apt-repository ppa:ondrej/php
fi

# GIMP
if [[ -z "`find /etc/apt/sources.list.d/ | grep gimp`" ]]
then
  sudo add-apt-repository ppa:otto-kesselgulasch/gimp
fi

apt-get -y update

########################################
# Install everything else

apt-get install -y tree xclip wmctrl jq
apt-get install -y keepassx
apt-get install -y python-gpgme dropbox
apt-get install -y ca-certificates apt-transport-https software-properties-common docker-ce
apt-get install -y build-essential nodejs
apt-get install -y brave
apt-get install -y pandoc texlive-latex-recommended texlive-fonts-recommended texlive-xetex
apt-get install -y golang-go php7.1
apt-get install -y vlc-nox gimp

apt-get -y upgrade && apt-get -y autoremove

pandoc=pandoc-2.7.3-1-amd64.deb
wget https://github.com/jgm/pandoc/releases/download/2.7.3/$pandoc
dpkg -i $pandoc
rm $pandoc

# Docker post-installation setup
usermod -aG docker $me
systemctl enable docker
docker swarm init "--advertise-addr=127.0.0.1" 2> /dev/null

########################################
# Vim setup

# This folder will store our temporary backup files
mkdir -p ~/.vimtmp

# folders to store plugins
mkdir -p ~/.vim/autoload
mkdir -p ~/.vim/bundle
mkdir -p ~/.vim/undo

# https://github.com/tpope/vim-pathogen
curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim

cd ~/.vim/bundle
[[ -d nerdtree ]] || git clone -q https://github.com/scrooloose/nerdtree.git
[[ -d supertab ]] || git clone -q https://github.com/ervandew/supertab
[[ -d syntastic ]] || git clone -q --depth=1 https://github.com/vim-syntastic/syntastic.git
#[[ -d tabnine-vim ]] || git@github.com:codota/tabnine-vim.git
[[ -d typescript-vim ]] || git clone -q https://github.com/leafgarland/typescript-vim.git
[[ -d vim-javascript ]] || git clone -q https://github.com/pangloss/vim-javascript.git
[[ -d vim-jsx ]] || git clone -q https://github.com/mxw/vim-jsx.git
[[ -d vim-solidity ]] || git clone -q https://github.com/tomlion/vim-solidity.git
[[ -d vim-vinegar ]] || git clone -q https://github.com/tpope/vim-vinegar.git

chown -R $me:$me ~/.vim

echo 'Success!'
